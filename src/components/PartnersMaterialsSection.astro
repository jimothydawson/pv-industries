---
// Partners Materials section following the exact script structure
const materialsData = {
  h2: "Materials We Supply:",
  materials: [
    {
      name: "Clean glass",
      description: "used in building materials, tiles, abrasives, and insulation",
      icon: "glass"
    },
    {
      name: "Refined aluminium",
      description: "remanufactured for construction and packaging",
      icon: "aluminium"
    },
    {
      name: "Silicon",
      description: "for potential reuse in industrial processes or new PV products",
      icon: "silicon"
    },
    {
      name: "Copper & metals",
      description: "recovered from cabling and electrical components",
      icon: "copper"
    },
    {
      name: "Steel and framing materials",
      description: "repurposed for structural applications",
      icon: "steel"
    }
  ],
  body: "All materials are processed at our facilities to meet strict quality control standards, ensuring they are suitable for direct reuse or as inputs for secondary manufacturing."
};
---

<section class="materials-section" id="materials">
  <div class="container">
    <div class="section-header">
      <h2 class="section-title">{materialsData.h2}</h2>
    </div>
    
    <div class="materials-grid">
      {materialsData.materials.map((material, index) => (
        <div class="material-card" data-aos="fade-up" data-aos-delay={index * 100}>
          <div class="material-icon">
            {material.icon === "glass" && (
              <svg width="32" height="32" viewBox="0 0 24 24" fill="none">
                <path d="M5 12V7C5 5.89543 5.89543 5 7 5H17C18.1046 5 19 5.89543 19 7V12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                <path d="M5 12C5 16.4183 8.58172 20 13 20H11C15.4183 20 19 16.4183 19 12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                <path d="M9 1V4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                <path d="M15 1V4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            )}
            {material.icon === "aluminium" && (
              <svg width="32" height="32" viewBox="0 0 24 24" fill="none">
                <path d="M21 16V8C20.9996 7.64928 20.9071 7.30481 20.7315 7.00116C20.556 6.69751 20.3037 6.44536 20 6.27L13 2.27C12.696 2.09446 12.3511 2.00205 12 2.00205C11.6489 2.00205 11.304 2.09446 11 2.27L4 6.27C3.69626 6.44536 3.44398 6.69751 3.26846 7.00116C3.09294 7.30481 3.00036 7.64928 3 8V16C3.00036 16.3507 3.09294 16.6952 3.26846 16.9988C3.44398 17.3025 3.69626 17.5546 4 17.73L11 21.73C11.304 21.9055 11.6489 21.9979 12 21.9979C12.3511 21.9979 12.696 21.9055 13 21.73L20 17.73C20.3037 17.5546 20.556 17.3025 20.7315 16.9988C20.9071 16.6952 20.9996 16.3507 21 16Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                <polyline points="7.5,4.21 12,6.81 16.5,4.21" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                <polyline points="7.5,19.79 7.5,14.6 3,12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                <polyline points="21,12 16.5,14.6 16.5,19.79" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                <polyline points="12,6.81 12,12.01" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            )}
            {material.icon === "silicon" && (
              <svg width="32" height="32" viewBox="0 0 24 24" fill="none">
                <rect x="2" y="2" width="20" height="20" rx="2.18" ry="2.18" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                <line x1="7" y1="2" x2="7" y2="22" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                <line x1="17" y1="2" x2="17" y2="22" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                <line x1="2" y1="12" x2="22" y2="12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                <line x1="2" y1="7" x2="7" y2="7" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                <line x1="2" y1="17" x2="7" y2="17" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                <line x1="17" y1="17" x2="22" y2="17" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                <line x1="17" y1="7" x2="22" y2="7" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            )}
            {material.icon === "copper" && (
              <svg width="32" height="32" viewBox="0 0 24 24" fill="none">
                <path d="M13 2L3 14H12L11 22L21 10H12L13 2Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            )}
            {material.icon === "steel" && (
              <svg width="32" height="32" viewBox="0 0 24 24" fill="none">
                <path d="M3 21H21" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                <path d="M6 21V9" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                <path d="M10 21V9" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                <path d="M14 21V9" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                <path d="M18 21V9" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                <path d="M3 9L12 2L21 9" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            )}
          </div>
          
          <div class="material-content">
            <h3 class="material-name">{material.name}</h3>
            <p class="material-description">â€“ {material.description}</p>
          </div>
        </div>
      ))}
    </div>
    
    <div class="quality-statement">
      <div class="quality-icon">
        <svg width="48" height="48" viewBox="0 0 24 24" fill="none">
          <path d="M9 12L11 14L15 10" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          <path d="M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </div>
      <p class="quality-text">{materialsData.body}</p>
    </div>
  </div>
</section>

<style>
  .materials-section {
    padding: var(--space-20) 0;
    background: var(--color-neutral-100);
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 var(--space-4);
  }

  .section-header {
    text-align: center;
    margin-bottom: var(--space-16);
  }

  .section-title {
    font-size: clamp(2rem, 4vw, 3rem);
    font-weight: 600;
    color: var(--color-neutral-900);
    margin-bottom: 0;
    animation: fadeInUp 0.8s ease-out;
  }

  .materials-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: var(--space-6);
    margin-bottom: var(--space-16);
  }

  @media (min-width: 768px) {
    .materials-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: var(--space-8);
    }
  }

  @media (min-width: 1024px) {
    .materials-grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  .material-card {
    background: var(--color-neutral-50);
    border-radius: var(--radius-lg);
    padding: var(--space-8);
    border: 1px solid var(--color-neutral-200);
    transition: all var(--transition-normal);
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
  }

  .material-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1);
    border-color: var(--color-primary-light);
  }

  .material-icon {
    width: 72px;
    height: 72px;
    background: linear-gradient(135deg, var(--color-primary), var(--color-primary-dark));
    border-radius: var(--radius-lg);
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--color-neutral-100);
    margin-bottom: var(--space-6);
  }

  .material-content {
    flex: 1;
  }

  .material-name {
    font-size: var(--font-size-xl);
    font-weight: 600;
    color: var(--color-primary);
    margin-bottom: var(--space-3);
  }

  .material-description {
    font-size: var(--font-size-base);
    color: var(--color-neutral-600);
    line-height: 1.5;
    margin: 0;
  }

  .quality-statement {
    background: linear-gradient(135deg, var(--color-primary-light), var(--color-primary));
    border-radius: var(--radius-xl);
    padding: var(--space-12);
    text-align: center;
    color: var(--color-neutral-100);
    animation: fadeInUp 0.8s ease-out 0.3s both;
  }

  .quality-icon {
    width: 80px;
    height: 80px;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto var(--space-6) auto;
    color: var(--color-neutral-100);
  }

  .quality-text {
    font-size: var(--font-size-lg);
    line-height: 1.6;
    margin: 0;
    max-width: 800px;
    margin-left: auto;
    margin-right: auto;
    color: var(--color-neutral-900);
  }

  /* Animation keyframes */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Responsive adjustments */
  @media (max-width: 767px) {
    .section-header {
      text-align: left;
    }
    
    .material-card {
      text-align: left;
      flex-direction: row;
      align-items: flex-start;
      gap: var(--space-4);
    }
    
    .material-icon {
      width: 56px;
      height: 56px;
      margin-bottom: 0;
      flex-shrink: 0;
    }
    
    .quality-statement {
      padding: var(--space-8);
      text-align: left;
    }
    
    .quality-icon {
      margin-left: 0;
    }
  }
</style>