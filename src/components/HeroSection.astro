---
import BrevoSignupForm from './BrevoSignupForm.astro';

// Hero section data
const heroData = {
  title: "Innovative solar waste management & recycling solutions",
  description: "We are leading the way in solar panel recycling in Australia and it is our aim to stop solar panels from entering landfill.",
  stats: [
    { number: "200", suffix: "+", label: "# of customers" },
    { number: "4", suffix: "", label: "# government grants awarded" },
    { number: "2", suffix: "", label: "# patents pending" }
  ],
  contactEmail: "contact@pvindustries.com.au",
  locations: [
    { name: "New South Wales", mapLink: "https://www.google.com/maps" },
    { name: "Victoria", mapLink: "https://www.google.com/maps" },
    { name: "Australian Capital Territory", mapLink: "https://www.google.com/maps" },
    { name: "South Australia", mapLink: "https://www.google.com/maps" }
  ]
};
---

<section class="hero-section" id="hero">
  <div class="hero-background"></div>
  
  <div class="container hero-container">
    <!-- Main Hero Content -->
    <div class="hero-main-content">
      <div class="hero-text-content">
        <h1 class="hero-title">{heroData.title}</h1>
      </div>
      
      <div class="hero-middle-content">
        <!-- Stats -->
        <div class="hero-stats">
          {heroData.stats.map((stat) => (
            <div class="hero-stat">
              <div class="stat-label">{stat.label}</div>
              <div class="stat-number">
                <span class="stat-value">{stat.number}</span>
                <span class="stat-suffix">{stat.suffix}</span>
              </div>
            </div>
          ))}
        </div>
        
        <!-- Description and Actions -->
        <div class="hero-description-section">
          <p class="hero-description">{heroData.description}</p>
          <div class="hero-actions">
            <a href="#HomeContact" class="button button-primary">
              Contact Us
              <svg class="button-icon" width="16" height="16" viewBox="0 0 16 16" fill="none">
                <path d="M6 12L10 8L6 4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </a>
            <a href="#future" class="button button-secondary">
              Learn more
            </a>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Hero Bottom Content -->
    <div class="hero-bottom-content">
      <div class="hero-contact-grid">
        <!-- Contact Info -->
        <div class="contact-block">
          <div class="contact-header">
            <svg class="contact-icon" width="24" height="24" viewBox="0 0 24 24" fill="none">
              <path d="M4 4H20C21.1 4 22 4.9 22 6V18C22 19.1 21.1 20 20 20H4C2.9 20 2 19.1 2 18V6C2 4.9 2.9 4 4 4Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              <polyline points="22,6 12,13 2,6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
            <h3 class="contact-title">Contact us</h3>
          </div>
          <div class="contact-content">
            <p class="contact-text">
              Email: <a href={`mailto:${heroData.contactEmail}`} class="contact-link">{heroData.contactEmail}</a>
            </p>
          </div>
        </div>
        
        <!-- Locations -->
        <div class="contact-block">
          <div class="contact-header">
            <svg class="contact-icon" width="24" height="24" viewBox="0 0 24 24" fill="none">
              <path d="M21 10C21 17 12 23 12 23S3 17 3 10C3 5.02944 7.02944 1 12 1C16.9706 1 21 5.02944 21 10Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              <circle cx="12" cy="10" r="3" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
            <h3 class="contact-title">Our locations</h3>
          </div>
          <div class="contact-content">
            {heroData.locations.map((location, index) => (
              <a href={location.mapLink} target="_blank" rel="noopener noreferrer" class="location-link">
                {location.name}{index < heroData.locations.length - 1 ? ', ' : ''}
              </a>
            ))}
          </div>
        </div>
        
        <!-- Newsletter Signup -->
        <BrevoSignupForm />
      </div>
      
      <div class="hero-bottom-background"></div>
    </div>
  </div>
</section>

<style>
  .hero-section {
    position: relative;
    min-height: 100vh;
    display: flex;
    align-items: center;
    color: var(--color-neutral-100);
    overflow: hidden;
  }

  .hero-background {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: linear-gradient(#0000, #0000), url('/images/Screen-Shot-2024-04-29-at-4.44.53-pm-p-1080.png');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    z-index: -2;
  }

  .hero-container {
    position: relative;
    z-index: 1;
    padding: 80px 16px 64px 16px; /* Explicit values for easier debugging */
    box-sizing: border-box;
    width: 100%;
  }

  @media (min-width: 640px) {
    .hero-container {
      padding: 80px 24px 64px 24px;
    }
  }

  @media (min-width: 1024px) {
    .hero-container {
      padding: 80px 32px 64px 32px;
    }
  }

  .hero-main-content {
    margin-bottom: var(--space-16);
  }

  .hero-text-content {
    max-width: 730px;
    margin-bottom: var(--space-10);
  }

  @media (max-width: 767px) {
    .hero-text-content {
      max-width: 100%;
    }
  }

  .hero-title {
    font-size: clamp(2.5rem, 5vw, 4rem);
    font-weight: 600;
    line-height: 1.1;
    margin-bottom: 0;
    animation: fadeInUp 0.8s ease-out;
    color: var(--color-neutral-100);
  }

  .hero-middle-content {
    display: flex;
    flex-direction: column;
    gap: 48px; /* var(--space-12) = 48px */
  }

  @media (min-width: 1024px) {
    .hero-middle-content {
      flex-direction: row;
      align-items: flex-start;
      gap: 64px; /* var(--space-16) = 64px */
    }
  }

  /* Stats */
  .hero-stats {
    display: flex;
    flex-direction: column;
    gap: 32px; /* var(--space-8) = 2rem = 32px */
    animation: fadeInUp 0.8s ease-out 0.2s both;
  }

  @media (min-width: 640px) {
    .hero-stats {
      flex-direction: row;
      flex-wrap: wrap;
      justify-content: space-between;
    }
    
    .hero-stat {
      flex: 1;
      min-width: 200px;
    }
  }

  .hero-stat {
    text-align: center;
  }

  @media (min-width: 768px) {
    .hero-stat {
      text-align: left;
    }
  }

  .stat-label {
    font-size: var(--font-size-lg);
    font-weight: 500;
    color: var(--color-neutral-100);
    margin-bottom: var(--space-3);
  }

  .stat-number {
    display: flex;
    align-items: baseline;
    justify-content: center;
    gap: var(--space-1);
  }

  @media (min-width: 768px) {
    .stat-number {
      justify-content: flex-start;
    }
  }

  .stat-value {
    font-size: clamp(2.5rem, 4vw, 3.5rem);
    font-weight: 600;
    line-height: 1;
  }

  .stat-suffix {
    font-size: clamp(1.5rem, 3vw, 2rem);
    font-weight: 600;
    color: var(--color-primary);
  }

  /* Description and Actions */
  .hero-description-section {
    max-width: 600px;
    animation: fadeInUp 0.8s ease-out 0.4s both;
  }

  @media (max-width: 767px) {
    .hero-description-section {
      max-width: 100%;
    }
  }

  .hero-description {
    font-size: var(--font-size-lg);
    color: var(--color-neutral-100);
    margin-bottom: var(--space-8);
    line-height: 1.6;
  }

  .hero-actions {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-4);
  }

  /* Hero Bottom Content */
  .hero-bottom-content {
    position: relative;
    margin-top: var(--space-20);
    animation: fadeInUp 0.8s ease-out 0.6s both;
  }

  .hero-contact-grid {
    display: flex;
    flex-direction: column;
    gap: 16px; /* Smaller gap on mobile */
    position: relative;
    z-index: 2;
    width: 100%;
    box-sizing: border-box;
  }

  @media (min-width: 768px) {
    .hero-contact-grid {
      flex-direction: row;
      flex-wrap: wrap;
      gap: 48px; /* var(--space-12) = 48px */
    }
    
    .contact-block {
      flex: 1;
      min-width: calc(50% - 24px); /* 2 columns with gap */
    }
  }

  @media (min-width: 1024px) {
    .hero-contact-grid {
      flex-wrap: nowrap;
      gap: 32px; /* slightly tighter gap to help fit one row */
      align-items: stretch;
      justify-content: space-between;
    }

    /* Make contact and locations blocks narrower so the form fits */
    .hero-contact-grid .contact-block {
      flex: 0 0 260px; /* fixed width for each small block */
      max-width: 280px;
      min-width: 0; /* allow shrinking below intrinsic width if needed */
    }

    /* Let the signup form take the remaining space */
    .hero-contact-grid .form-card {
      flex: 1 1 0;
      min-width: 420px; /* ensure usable min width for the form */
    }

    /* Override with scoped selector to ensure the desired sizes */
    .hero-contact-grid[data-astro-cid-nlow4r3u] .contact-block[data-astro-cid-nlow4r3u] {
      flex: 0 0 298px;
      max-width: 330px;
      min-width: 0;
    }
  }

  .contact-block {
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 12px; /* var(--radius-xl) = 12px */
    padding: 24px; /* var(--space-6) = 24px */
    transition: all var(--transition-normal);
    box-sizing: border-box;
    width: 100%;
  }

  .contact-block:hover {
    background: rgba(255, 255, 255, 0.15);
    transform: translateY(-2px);
  }

  .contact-header {
    display: flex;
    align-items: center;
    gap: var(--space-2);
    margin-bottom: var(--space-4);
  }

  .contact-icon {
    color: var(--color-primary);
    flex-shrink: 0;
  }

  .contact-title {
    color: var(--color-neutral-100);
    font-size: var(--font-size-lg);
    font-weight: 600;
    margin: 0;
  }

  .contact-content {
    color: var(--color-neutral-100);
  }

  .contact-link {
    color: var(--color-neutral-100);
    text-decoration: none;
    transition: color var(--transition-normal);
  }

  .contact-link:hover {
    color: var(--color-primary);
  }

  .location-link {
    color: var(--color-neutral-100);
    text-decoration: none;
    transition: color var(--transition-normal);
  }

  .location-link:hover {
    color: var(--color-primary);
  }

  .hero-bottom-background {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, rgba(255, 107, 53, 0.1) 0%, rgba(37, 99, 235, 0.1) 100%);
    border-radius: var(--radius-xl);
    z-index: -1;
  }

  /* Responsive adjustments */
  @media (max-width: 767px) {
    .hero-container {
      padding: 64px 16px 64px 16px; /* Explicit mobile padding for debugging */
    }
    
    .hero-stats {
      grid-template-columns: 1fr;
      gap: var(--space-6);
    }
    
    .hero-actions {
      flex-direction: column;
    }
    
    .button {
      justify-content: center;
    }
  }
</style>